<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.hdos.platform.base.component.mapper.ExcelImportTemplateMapper">

	<sql id="Column_List">
		EXCEL_IMPORT_TEMPLATE_ID
		,TABLE_NAME
		,TEMPLATE_NAME
		,CREATE_TIME
		,RULE
		,EXCEL_KEY
	</sql>

	<sql id="Column_ListDetail">
		EXCEL_IMPORT_COLUMN_ID
		,EXCEL_IMPORT_TEMPLATE_ID
		,COLUMN_NAME
		,FIELD_NAME
		,RELATION_FIELD_NAME
		,TYPE
		,LENGTH
		,SORT_NO
	</sql>


	<sql id="Where_Clause">
		<where>
			<if test="condition.excelImportTemplateId != null">
				and EXCEL_IMPORT_TEMPLATE_ID =
				#{condition.excelImportTemplateId}
			</if>
			<if test="condition.tableName != null">
				and TABLE_NAME =#{condition.tableName}
			</if>
			<if test="condition.excelKey != null">
				and EXCEL_KEY =#{condition.excelKey}
			</if>
		</where>
	</sql>

	<select id="getById"
		resultType="com.hdos.platform.base.component.model.ExcelImportTemplateVO"
		parameterType="String">
		select
		<include refid="Column_List" />
		from PUB_EXCEL_IMPORT_TEMPLATE where EXCEL_IMPORT_TEMPLATE_ID = #{id}
	</select>

	<select id="getByKey"
		resultType="com.hdos.platform.base.component.model.ExcelImportTemplateVO"
		parameterType="String">
		select
		<include refid="Column_List" />
		from PUB_EXCEL_IMPORT_TEMPLATE where EXCEL_KEY = #{key}
	</select>

	<select id="count" resultType="int" parameterType="map">
		select COUNT(1)
		from PUB_EXCEL_IMPORT_TEMPLATE

		<where>
			<if test="condition.excelImportTemplateId != null">
				and EXCEL_IMPORT_TEMPLATE_ID !=
				#{condition.excelImportTemplateId}
			</if>
			<if test="condition.templateName != null">
				and TEMPLATE_NAME =#{condition.templateName}
			</if>
			<if test="condition.excelKey != null">
				and EXCEL_KEY =#{condition.excelKey}
			</if>
		</where>

	</select>

	<select id="countKey" resultType="int"
		parameterType="com.hdos.platform.base.component.model.ExcelImportTemplateVO">
		select COUNT(1) from PUB_EXCEL_IMPORT_TEMPLATE
		<where>
			<if test="excelImportTemplateId != 'null'">EXCEL_IMPORT_TEMPLATE_ID != #{excelImportTemplateId}</if>
			<if test="excelKey != null">and EXCEL_KEY = #{excelKey}</if>
		</where>
	</select>

	<select id="list"
		resultType="com.hdos.platform.base.component.model.ExcelImportTemplateVO"
		parameterType="map">
		select
		<include refid="Column_List" />
		from PUB_EXCEL_IMPORT_TEMPLATE
		<include refid="Where_Clause"></include>
		ORDER BY CREATE_TIME DESC
	</select>

	<select id="listDetail"
		resultType="com.hdos.platform.base.component.model.ExcelImportColumnVO"
		parameterType="map">
		select
		<include refid="Column_ListDetail" />
		from PUB_EXCEL_IMPORT_COLUMN WHERE EXCEL_IMPORT_TEMPLATE_ID = #{id}
		ORDER BY SORT_NO
	</select>

	<select id="listFieldName"
		resultType="com.hdos.platform.base.component.model.ExcelImportColumnVO"
		parameterType="java.lang.String">
		select
		<include refid="Column_ListDetail" />
		from PUB_EXCEL_IMPORT_COLUMN
		WHERE EXCEL_IMPORT_TEMPLATE_ID = (select EXCEL_IMPORT_TEMPLATE_ID from
		PUB_EXCEL_IMPORT_TEMPLATE where TABLE_NAME = #{tableName}) ORDER BY
		SORT_NO
	</select>
	<select id="listFieldKey"
		resultType="com.hdos.platform.base.component.model.ExcelImportColumnVO"
		parameterType="java.lang.String">
		select
		<include refid="Column_ListDetail" />
		from PUB_EXCEL_IMPORT_COLUMN
		WHERE EXCEL_IMPORT_TEMPLATE_ID = (select EXCEL_IMPORT_TEMPLATE_ID from
		PUB_EXCEL_IMPORT_TEMPLATE where EXCEL_KEY = #{excelKey}) ORDER BY
		SORT_NO
	</select>
	<insert id="insert"
		parameterType="com.hdos.platform.base.component.model.ExcelImportTemplateVO">
		insert into PUB_EXCEL_IMPORT_TEMPLATE (
		<include refid="Column_List" />
		)
		values (
		#{excelImportTemplateId}
		,#{tableName}
		,#{templateName}
		,#{createTime}
		,#{rule}
		,#{excelKey}
		)
	</insert>

	<insert id="insertDetail"
		parameterType="com.hdos.platform.base.component.model.ExcelImportColumnVO">
		insert into PUB_EXCEL_IMPORT_COLUMN (
		<include refid="Column_ListDetail" />
		)
		values (
		#{excelImportColumnId}
		,#{excelImportTemplateId}
		,#{columnName}
		,#{fieldName}
		,#{relationFieldName}
		,#{type}
		,#{length}
		,#{sortNo}
		)
	</insert>


	<!-- 批量插入明细表
	<select id="insertDetailBatch" parameterType="java.util.List">
		insert into PUB_EXCEL_IMPORT_COLUMN(
		<include refid="Column_ListDetail" />
		)
		values
		<foreach collection="list" item="excelImportColumnVO" index="index"
			separator=",">
			(
			#{excelImportColumnVO.excelImportColumnId},
			#{excelImportColumnVO.excelImportTemplateId},#{excelImportColumnVO.columnName},
			#{excelImportColumnVO.fieldName},#{excelImportColumnVO.relationFieldName},#{excelImportColumnVO.type},
			#{excelImportColumnVO.length},#{excelImportColumnVO.sortNo}
			)
		</foreach>

	</select>
	 -->
		<!-- 批量插入明细表 -->
	<select id="insertDetailBatch" parameterType="java.util.List">
		insert into PUB_EXCEL_IMPORT_COLUMN(
		<include refid="Column_ListDetail" />
		)
		<foreach collection="list" item="excelImportColumnVO" separator="union all">
			select
			#{excelImportColumnVO.excelImportColumnId},
			#{excelImportColumnVO.excelImportTemplateId},#{excelImportColumnVO.columnName},
			#{excelImportColumnVO.fieldName},#{excelImportColumnVO.relationFieldName},#{excelImportColumnVO.type},
			#{excelImportColumnVO.length},#{excelImportColumnVO.sortNo}
			from dual
		</foreach>

	</select>


	<insert id="insertByExcel" statementType="STATEMENT">
		insert into ${column}
		values ${value}
	</insert>

	<select id="getColumnByTableName" parameterType="java.lang.String"
		resultType="com.hdos.platform.base.component.model.TableVO" databaseId="mysql">
		select COLUMN_NAME,COLUMN_COMMENT,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH DATA_LENGTH from
		information_schema.COLUMNS where table_name = #{tableName}
		AND
		COLUMN_KEY NOT LIKE('%PRI%')
	</select>

	<select id="getColumnByTableName" parameterType="java.lang.String"
		resultType="com.hdos.platform.base.component.model.TableVO" databaseId="oracle">
		SELECT a.COLUMN_NAME, a.DATA_TYPE DATA_TYPE,a.DATA_LENGTH,
		b.comments COLUMN_COMMENT
		FROM user_tab_columns a,
		user_col_comments b,
		user_cons_columns cu,
		user_constraints au
		WHERE a.TABLE_NAME = b.table_name
		and a.COLUMN_NAME = b.column_name
		and cu.constraint_name = au.constraint_name
		and au.constraint_type = 'P'
		and au.table_name = a.TABLE_NAME
		and cu.column_name != a.COLUMN_NAME
		and a.TABLE_NAME = #{tableName}
	</select>


	<select id="getColumnByTable" parameterType="java.util.Map"
		resultType="com.hdos.platform.base.component.model.TableVO"
		databaseId="mysql">
		select COLUMN_NAME,COLUMN_COMMENT,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH DATA_LENGTH from
		information_schema.COLUMNS
		<where>
			<if test="tableName!=null"> TABLE_NAME = #{tableName} AND COLUMN_KEY NOT
				LIKE('%PRI%')</if>
			<if test="columnNames!= null">
				AND COLUMN_NAME NOT IN
				<foreach collection="columnNames" item="item" index="index"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</where>
	</select>

	<select id="getColumnByTable" parameterType="map"
		resultType="com.hdos.platform.base.component.model.TableVO"
		databaseId="oracle">
		SELECT a.COLUMN_NAME, a.DATA_TYPE DATA_TYPE,a.DATA_LENGTH,
		b.comments COLUMN_COMMENT
		FROM user_tab_columns a,
		user_col_comments b,
		user_cons_columns cu,
		user_constraints au
		WHERE a.TABLE_NAME = b.table_name
		and a.COLUMN_NAME = b.column_name
		and cu.constraint_name = au.constraint_name
		and au.constraint_type = 'P'
		and au.table_name = a.TABLE_NAME
		and cu.column_name != a.COLUMN_NAME
		and a.TABLE_NAME = #{tableName}
		<if test="columnNames!= null">
				and a.COLUMN_NAME NOT IN
				<foreach collection="columnNames" item="item" index="index"
					open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
	</select>


	<select id="getColumnByTablePRI" parameterType="java.lang.String"
		resultType="com.hdos.platform.base.component.model.TableVO"
		databaseId="mysql">
		select COLUMN_NAME,COLUMN_COMMENT from
		information_schema.COLUMNS where table_name = #{tableName} AND
		COLUMN_KEY LIKE('%PRI%')
	</select>

	<select id="getColumnByTablePRI" parameterType="string"
		resultType="com.hdos.platform.base.component.model.TableVO"
		databaseId="oracle">
		SELECT a.COLUMN_NAME COLUMN_NAME, b.comments COLUMN_COMMENT
		FROM user_tab_columns a,
		user_col_comments b,
		user_cons_columns cu,
		user_constraints au
		WHERE a.TABLE_NAME = b.table_name
		and a.COLUMN_NAME = b.column_name
		and cu.constraint_name = au.constraint_name
		and au.constraint_type = 'P'
		and au.table_name = a.TABLE_NAME
		and cu.column_name = a.COLUMN_NAME
		and a.TABLE_NAME = #{tableName}
	</select>



	<update id="update"
		parameterType="com.hdos.platform.base.component.model.ExcelImportTemplateVO">
		update PUB_EXCEL_IMPORT_TEMPLATE
		<set>
			<if test="tableName != null">TABLE_NAME = #{tableName},</if>
			<if test="templateName != null">TEMPLATE_NAME = #{templateName},
			</if>
			<if test="rule != null">RULE = #{rule},</if>
			<if test="excelKey != null">EXCEL_KEY = #{excelKey}</if>
		</set>
		where EXCEL_IMPORT_TEMPLATE_ID = #{excelImportTemplateId}
	</update>

	<delete id="delete" parameterType="java.lang.String">
		delete from
		PUB_EXCEL_IMPORT_TEMPLATE where EXCEL_IMPORT_TEMPLATE_ID =
		#{excelImportTemplateId}
	</delete>

	<delete id="deleteInBulk" parameterType="java.lang.String">
		delete from PUB_EXCEL_IMPORT_TEMPLATE where EXCEL_IMPORT_TEMPLATE_ID
		in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<delete id="deleteInBulkDetail" parameterType="java.lang.String">
		delete from PUB_EXCEL_IMPORT_COLUMN where EXCEL_IMPORT_TEMPLATE_ID in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

</mapper>