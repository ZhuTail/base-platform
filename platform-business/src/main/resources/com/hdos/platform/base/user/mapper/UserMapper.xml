<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdos.platform.base.user.mapper.UserMapper">
	
	<sql id="Column_List">
		USER_ID, STATUS, CREATE_TIME, UPDATE_TIME, SORT_NO, NICK_NAME, USER_NAME, TYPE, GENDER, PHONE, EMAIL, DESCRIPTION, DEPARTMENT_ID,USER_ACCOUNT,USER_CODE,MERCHANT_ID
	</sql>
	
	<sql id="Where_Clause">
		<where>
    		<if test="condition.userId != null">
    			  USER_ID like CONCAT('%','${condition.userId}','%' ) 
    		</if>
    	</where>
	</sql>

	<select id="count" resultType="int" parameterType="map">
		select COUNT(1)
    	from PUB_USER
    	<include refid="Where_Clause" />
	</select>
	
	<select id="verifyRepeat" resultType="int" parameterType="com.hdos.platform.base.user.model.AccountInfoVO">
		select COUNT(1)
		from PUB_USER
		where USER_ACCOUNT = #{userAccount} 
	</select>

	<select id="verifyUserCodeExceptSelf" resultType="int" parameterType="String">
		select COUNT(1)
		from PUB_USER
		where USER_CODE = #{0} and USER_ID NOT IN (#{1})
	</select>

	<select id="verifyUserCode" resultType="int" parameterType="String">
		select COUNT(1)
		from PUB_USER
		where USER_CODE = #{userCode} 
	</select>

	<select id="list" resultType="com.hdos.platform.base.user.model.UserVO" parameterType="map">
		select <include refid="Column_List" />
    	from PUB_USER
    	<include refid="Where_Clause" />
    	ORDER BY SORT_NO ASC, UPDATE_TIME DESC
	</select>
	
	<select id="findAllUsers" resultType="com.hdos.platform.base.user.model.UserVO">
		select a.*
    	from PUB_USER a,PUB_ACCOUNT b where a.USER_ID = b.USER_ID ORDER BY SORT_NO ASC, UPDATE_TIME DESC
	</select>
		
	<select id="findAllAccount" resultType="com.hdos.platform.base.user.model.AccountVO">
		select * from PUB_ACCOUNT
	</select>
	
	<select id="findSelectUsers" resultType="com.hdos.platform.base.user.model.UserVO" parameterType="java.lang.String">
    	SELECT A.* FROM PUB_USER A , PUB_USER_R_ROLE B WHERE A.USER_ID = B.USER_ID AND B.ROLE_ID = #{roleId}
	</select>
	
	<select id="queryDepartmentName" resultType="java.lang.String" parameterType="java.lang.String">
    	SELECT DEPARTMENT_NAME FROM PUB_USER, PUB_DEPARTMENT WHERE PUB_DEPARTMENT.DEPARTMENT_ID = PUB_USER.DEPARTMENT_ID AND PUB_USER.USER_ID = #{userId}
	</select>
	<select id="queryMerchantName" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT MERCHANT_NAME FROM PUB_USER, PROD_MERCHANT WHERE PROD_MERCHANT.MERCHANT_ID = PUB_USER.MERCHANT_ID AND PUB_USER.USER_ID = #{userId}
	</select>	
	<select id="usersGetDepartmentName" resultType="com.hdos.platform.base.user.model.UserVO" parameterType="com.hdos.platform.base.user.model.UserVO">
	select A.USER_ID, A.STATUS, A.CREATE_TIME, A.UPDATE_TIME, A.SORT_NO, A.NICK_NAME, A.USER_NAME, A.TYPE, A.GENDER, A.PHONE, A.EMAIL, A.DESCRIPTION, A.DEPARTMENT_ID,A.USER_ACCOUNT, B.DEPARTMENT_NAME
	 from PUB_USER A, PUB_DEPARTMENT B WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID AND A.USER_ID in 
	<foreach collection ="list" item="item" index= "index" open="(" separator ="," close=")">
       			#{item.userId}
       </foreach>
	</select>
	
	<select id="serchByUserId" parameterType="java.lang.String" resultType="com.hdos.platform.base.user.model.UserVO">
		select <include refid="Column_List" />
		from PUB_USER
		<where>
		USER_ID in 
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
		</where>
	</select>
	
	<insert id="insert" parameterType="com.hdos.platform.base.user.model.UserVO">
		insert into PUB_USER (USER_ID, STATUS, CREATE_TIME, UPDATE_TIME, SORT_NO, NICK_NAME, USER_NAME, TYPE, GENDER, PHONE, EMAIL, DESCRIPTION, DEPARTMENT_ID,USER_ACCOUNT,USER_CODE)
		values (
		  #{userId}, 0, #{createTime}, #{updateTime}, 0, #{nickName}, #{userName}, #{type}, #{gender}, #{phone}, #{email}, #{description}, #{departmentId},#{userAccount},#{userCode}
		)
	</insert>

	<insert id="insertAsMerchantUser" parameterType="com.hdos.platform.base.user.model.UserVO">
		insert into PUB_USER (USER_ID, STATUS, CREATE_TIME, UPDATE_TIME, SORT_NO, NICK_NAME, USER_NAME, TYPE, GENDER, PHONE, EMAIL, DESCRIPTION, MERCHANT_ID,USER_ACCOUNT,USER_CODE)
		values (
		  #{userId}, 0, #{createTime}, #{updateTime}, 0, #{nickName}, #{userName}, #{type}, #{gender}, #{phone}, #{email}, #{description}, #{merchantId},#{userAccount},#{userCode}
		)
	</insert>

	<update id="update" parameterType="com.hdos.platform.base.user.model.UserVO">
		update PUB_USER
		<set>
			<if test="nickName != null">NICK_NAME = #{nickName}, </if>
			<if test="userName != null">USER_NAME = #{userName}, </if>
			<if test="gender != null">GENDER = #{gender}, </if>
			<if test="phone != null">PHONE = #{phone}, </if>
			<if test="email != null">EMAIL = #{email}, </if>
			<if test="description != null">DESCRIPTION = #{description}, </if>
			<if test="sortNo != null">SORT_NO = #{sortNo}, </if>
			<if test="type != null">TYPE = #{type}, </if>
			<if test="userCode != null">USER_CODE = #{userCode}, </if>
			UPDATE_TIME = #{updateTime}
		</set>
		where USER_ID = #{userId}
	</update>
	
	<update id="delete" parameterType="java.lang.String" >
		update PUB_USER set STATUS = -1 where USER_ID = #{userId}
	</update>
	
	<delete id="deleteInBulk" parameterType="java.lang.String">
		delete from PUB_USER  where USER_ID in 
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}  
		</foreach>
	</delete>
	
	<select id="getUserIdByAccount" parameterType="java.lang.String" resultType="java.lang.String">
		select USER_ID from PUB_ACCOUNT where USER_ACCOUNT = #{userAccount}
	</select>
	<!-- 根据account查询商户ID -->
	<select id="getMerchantIdByAccount" parameterType="java.lang.String" resultType="java.lang.String">
		select MERCHANT_ID from PUB_USER  where USER_ACCOUNT = #{userAccount}
	</select>
	
	<select id="getMerchantIdByUserId" parameterType="java.lang.String" resultType="java.lang.String">
		select MERCHANT_ID from PUB_USER  where USER_ID = #{userId}
	</select>
	
	<select id="getDepartmentIdByUserId" parameterType="java.lang.String" resultType="java.lang.String">
		select DEPARTMENT_ID from PUB_USER  where USER_ID = #{userId}
	</select>
	
	<!-- 根据ID 查询商户account-->
	<select id="getAccountByMerchantId" parameterType="java.lang.String" resultType="java.lang.String">
		select USER_ACCOUNT from PUB_USER  where MERCHANT_ID = #{merchantId}
	</select>	
	<select id="getById" resultType="com.hdos.platform.base.user.model.UserVO" parameterType="java.lang.String" >
		select <include refid="Column_List" /> from PUB_USER where USER_ID = #{userId} and status != -1
	</select>
	
	<!-- custom methods -->
	
	<select id="findByClassId" resultType="com.hdos.platform.base.user.model.UserVO" parameterType="java.lang.String" >
		select <include refid="Column_List" /> from PUB_USER where USER_ID in (
		select USER_ID from PUB_USER_INFO where CLASS_ID = #{classId}
		) and status != -1
	</select>
	
	<!-- 新增用户角色 -->
	<insert id="insertUserRole" parameterType="java.util.List">
		insert into PUB_USER_R_ROLE values
		<foreach collection ="list" item="item" index= "index" separator =",">
        	(
       			#{item.userId}, #{item.roleId}
            )
       </foreach>
	</insert>
	
	<select id="insertUserRoleSingle" >
		insert into PUB_USER_R_ROLE values (#{0},#{1})
	</select>
	
	<!-- 删除用户角色 -->
	<delete id="deleteUserRole" parameterType="java.lang.String">
	 	delete from PUB_USER_R_ROLE where ROLE_ID=#{roleId}
	</delete>
	
	<select id="listTreeOfRole" resultType="com.hdos.platform.base.user.model.AccountInfoVO" parameterType="java.lang.String">
	select  PUB_USER.USER_ID, PUB_USER.STATUS, PUB_USER.CREATE_TIME, PUB_USER.UPDATE_TIME, PUB_USER.SORT_NO, NICK_NAME, USER_NAME, (SELECT PUB_CONFIG.NAME from PUB_CONFIG WHERE PUB_CONFIG.CONFIG_VALUE = PUB_USER.TYPE )TYPE, GENDER, PHONE, EMAIL, DESCRIPTION, PUB_ACCOUNT.USER_ACCOUNT, PWD, PUB_USER.DEPARTMENT_ID,DEPARTMENT_NAME 
    	from PUB_USER, PUB_ACCOUNT, PUB_DEPARTMENT,PUB_ROLE_T_OPERATION WHERE PUB_ROLE_T_OPERATION.ROLE_ID = #{roleId}
    </select>
    
    <select id="createRole" >
	insert into PUB_USER_R_ROLE values (#{0},#{1})
    </select>
    
    <select id="getUserRole" resultType="com.hdos.platform.base.role.model.RoleVO" parameterType="String" >
	SELECT ROLE_NAME,ROLE_ID FROM PUB_ROLE WHERE ROLE_ID IN (SELECT ROLE_ID FROM PUB_USER_R_ROLE WHERE USER_ID = #{userId})
    </select>
</mapper>